#+AUTHOR:    Anton S. Kosinov
#+TITLE:     A factory design sample
#+SUBTITLE:  pet yields by the factory
#+EMAIL:     a.s.kosinov@gmail.com
#+LANGUAGE: en
#+STARTUP: showall
#+PROPERTY:header-args :results output :exports both

*Code*
#+BEGIN_SRC python :tangle pet_factory.py
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-
  """
  This is a sample tangled content
  """
  class Dog(object):
      """A simple dog class"""

      def __init__(self, name):
          self._name = name

      def speak(self):
          return "Woof!"


  class Cat(object):
      """A simple cat class"""

      def __init__(self, name):
          self._name = name

      def speak(self):
          return "Meow!"


  def spawn_pet(pet="dog"):
      """The factory method"""
      pets = dict(dog=Dog("Hope"), cat=Cat("Peace"))
      return pets[pet]

  d = spawn_pet("dog")
  print(d.speak())
  c = spawn_pet("cat")
  print(c.speak())
#+END_SRC

#+RESULTS:
: Woof!
: Meow!

*Test suite*
#+BEGIN_SRC python :tangle test_pet_factory.py
  import unittest
  from pet_factory import Dog, Cat, spawn_pet

  print("Import works!")
#+END_SRC

#+RESULTS:
: Woof!
: Meow!
: Import works!
